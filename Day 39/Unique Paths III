class Solution {
public:
int ans=0,n,m,cnt=0;
    int uniquePathsIII(vector<vector<int>>& grid) {
        n=grid.size(),m=grid[0].size();

        for(int i=0;i<n;i++){
            for(int j=0;j<m;j++){
                if(grid[i][j]==0)   cnt++;
            }
        }
        for(int i=0;i<n;i++){
            for(int j=0;j<m;j++){
                if(grid[i][j]==1)
                    rec(grid,i,j,0);
            }
        }
        return ans;
    }
    int X[4]={0,0,1,-1};
    int Y[4]={1,-1,0,0};
    void rec(vector<vector<int>>& grid,int i,int j,int step){
        if(i<0 || j<0 || j>=m || i>=n)  return;
        if(grid[i][j]==2){
            if(step==cnt+1)   ans++;
            return;
        }
        if( grid[i][j]==-1 || grid[i][j]==3)    return;
        grid[i][j]=3;

        for(int len=0;len<4;len++){
            rec(grid,i+X[len],j+Y[len],step+1);
        }
        grid[i][j]=0;
    }
};
